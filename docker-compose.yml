version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: getpix_app
    restart: unless-stopped
    depends_on:
      - kafka
      - redis
    environment:
      - APP_ENV=local
      - DB_CONNECTION=mongo
      - DB_HOST=mongo
      - DB_PORT=27017
      - KAFKA_BROKER=getpix_kafka:9092
    ports:
      - "9501:9501"
      - "9510:9510"
    volumes:
      - ./html:/var/www/html
    working_dir: /var/www/html
    networks:
      - getpix
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: getpix_zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - getpix

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: getpix_kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: getpix_zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://getpix_kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - getpix

  redis:
    image: redis:latest
    container_name: getpix_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - getpix

  prometheus:
    image: prom/prometheus
    container_name: getpix_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - getpix

  grafana:
    image: grafana/grafana
    container_name: getpix_grafana
    ports:
      - "3000:3000"
    networks:
      - getpix

networks:
  getpix:
    driver: bridge